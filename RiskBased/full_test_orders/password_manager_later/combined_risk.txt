Based on the risk order and related modules, the optimized order of test cases is:
ScopeServiceTest#testSaveAll_SavesNewScopes
ScopeServiceTest#testGetAllScopesByUserAndClient
ScopeServiceTest#testGetAllScopesByUserAndClientId
ScopeServiceTest#testGenerateScope_ValidScope
ScopeServiceTest#testGenerateScope_InvalidScopeThrowsException
ScopeServiceTest#testIsScopeValid
ScopeServiceTest#testDeleteAllScopesByUserAndClient
UserServiceTest#testGetAllowedScopes_Success
UserServiceTest#testGetAllowedScopesPerClient_Success
UserServiceTest#testLoadUserByUsername_UserFound
UserServiceTest#testLoadUserByUsername_UserNotFound
UserServiceTest#testRevokeClientPermissions_Success
UserServiceTest#testRevokeClientPermissions_ClientNotFound
AuthenticationServiceTest#testRegister_Success
AuthorizationServiceTest#testProcessAuthorization_NoClientInSession_InvalidSession
AuthenticationServiceTest#testRegister_UsernameExists_ThrowsException
AuthorizationServiceTest#testProcessAuthorization_NoChallengeMethodInSession_InvalidSession
AuthenticationServiceTest#testRegister_EmailExists_ThrowsException
AuthorizationServiceTest#testProcessAuthorization_NoChallengeInSession_InvalidSession
AuthorizationServiceTest#testProcessAuthorization_NoRedirectUriInSession_InvalidSession
AuthorizationServiceTest#testProcessAuthorization_CouldNotCreateUniqueCode_InternalError
AuthorizationServiceTest#testProcessAuthorization_NoStateInSession_InvalidSession
AuthorizationServiceTest#testProcessAuthorization_Successful
AuthorizationServiceTest#testGenerateAccessToken_InvalidGrantType
AuthorizationServiceTest#testGenerateAccessToken_InvalidAuthorizationCode
AuthorizationServiceTest#testGenerateAccessToken_InvalidClientCredentials
ScopeRepositoryIntegrationTest#testSaveAndFindByUserAndClient
AuthorizationServiceTest#testGenerateAccessToken_ExpiredCode
ScopeRepositoryIntegrationTest#testFindAllByUserAndClientId
AuthorizationServiceTest#testGenerateAccessToken_UsedCode
ScopeRepositoryIntegrationTest#testFindAllByUserAndClient_NoScopesFound
AuthorizationServiceTest#testGenerateAccessToken_InvalidChallengeCode
ScopeRepositoryIntegrationTest#testFindAllByUserAndClient_ClientId_NoScopesFound
AuthorizationServiceTest#testGenerateAccessToken_OnlyAccessToken
AuthorizationServiceTest#testGenerateAccessToken_WithRefreshToken
AuthorizationServiceTest#testGenerateAccessToken_WithIdToken
AuthorizationServiceTest#testGenerateAccessTokenViaRefreshToken
AuthorizationServiceTest#testProcessAuthorization_Successful_WithSecurityContext
RefreshTokenServiceTest#testFindByCode_TokenExistsAndActive
RefreshTokenServiceTest#testFindByCode_TokenNotFound
JwtServiceTest#testCreateHexadecimalEncodedRandomBytes
RefreshTokenServiceTest#testFindByCode_TokenInactive
JwtServiceTest#testGenerateAccessToken
RefreshTokenServiceTest#testCreateRefreshToken
JwtServiceTest#testGenerateIdToken
RefreshTokenServiceTest#testSaveRefreshToken
ClientServiceTest#testFindClientById_ClientExists
RefreshTokenServiceTest#testDisableRefreshToken
ClientServiceTest#testFindClientById_ClientNotFound
AuthorizationCodeRepositoryIntegrationTest#testFindByCode_CodeExists
ClientServiceTest#testCheckClientSecret_ValidSecret
AuthorizationCodeRepositoryIntegrationTest#testFindByCode_CodeNotExists
ClientServiceTest#testCheckClientSecret_InvalidSecret
AuthorizationCodeRepositoryIntegrationTest#testFindAllByUserAndClient
ClientServiceTest#testCheckClientSecret_ClientNotFound
ClientServiceTest#testAuthorizeClient_InvalidRedirectUri
RefreshTokenRepositoryIntegrationTest#testSaveAndFindByCode
ClientServiceTest#testAuthorizeClient_InvalidResponseType
RefreshTokenRepositoryIntegrationTest#testFindByUserAndClientAndActiveTrue
ClientServiceTest#testAuthorizeClient_OpenIdScopeButNoNonce_BadRequest
RefreshTokenRepositoryIntegrationTest#testFindByUserAndClientAndActiveTrue_NoActiveTokens
ClientServiceTest#testAuthorizeClient_InvalidScope
ClientServiceTest#testAuthorizeClient_StoresSessionAttributes
ClientServiceTest#testAuthorizeClient_ValidRequest
ClientServiceTest#testSaveClient_CompanyNotFound
ClientServiceTest#testSaveClient_Successful
RedirectUriServiceTest#testValidate_ValidUriForServerApp
RedirectUriServiceTest#testValidate_InvalidUriWithFragment
RedirectUriServiceTest#testValidate_InvalidUriForServerApp
RedirectUriServiceTest#testFindByUri_UriExists
RedirectUriServiceTest#testFindByUri_UriNotFound
RedirectUriServiceTest#testIsRedirectUriRegisteredByClient_Exists
RedirectUriServiceTest#testIsRedirectUriRegisteredByClient_NotExists
CompanyServiceTest#testLoadUserByUsername_CompanyExists
CompanyServiceTest#testLoadUserByUsername_CompanyNotFound
RedirectUriRepositoryIntegrationTest#testSaveAndFindById
CompanyServiceTest#testSaveCompany_Success
RedirectUriRepositoryIntegrationTest#testFindByUri_UriExists
ClientRepositoryIntegrationTest#testSaveAndFindById
RedirectUriRepositoryIntegrationTest#testFindByUri_UriNotFound
RedirectUriRepositoryIntegrationTest#testExistsByUriAndClient_ClientId_Exists
RedirectUriRepositoryIntegrationTest#testExistsByUriAndClient_ClientId_NotExists
CompanyRepositoryIntegrationTest#testSaveAndFindById
CompanyRepositoryIntegrationTest#testFindByUsernameAndEnabledTrue_CompanyExists
CompanyRepositoryIntegrationTest#testFindByUsernameAndEnabledTrue_CompanyNotFound
